name: CI

on:
  push:
    branches: [ "main", "master", "builds" ]
  pull_request:
    branches: [ "main", "master", "builds" ]

permissions:
  contents: read

jobs:
  test:
    name: "Python ${{ matrix.python-version }} ― Unit Tests"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.13.5"]

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🐍 Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: 🚀 Install UV package manager
        run: |
          python -m pip install --upgrade pip
          pip install uv

      # Optional: cache the UV virtualenv to speed up installs
      - name: ⏫ Restore UV cache
        id: uv-cache
        uses: actions/cache@v4
        with:
          path: .venv
          key: uv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/pyproject.toml') }}

      - name: 📦 Install dependencies with UV
        run: |
          # Install all project & dev dependencies into system env
          uv sync --all-groups

      - name: 🧪 Run test-suite (pytest)
        run: |
          uv run pytest -q

      - name: 📊 Upload test artifacts (optional)
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: "pytest-report-${{ matrix.python-version }}"
          path: .pytest_cache 