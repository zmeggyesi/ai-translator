name: Nuitka Build

on:
  workflow_dispatch:
    inputs:
      build_os:
        description: 'Operating system to build for'
        required: false
        default: 'all'
        type: choice
        options:
        - all
        - ubuntu-latest
        - windows-latest
        - macos-latest

permissions:
  contents: read

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: ${{ fromJSON(inputs.build_os == 'all' && '["macos-latest", "ubuntu-latest", "windows-latest"]' || format('["{0}"]', inputs.build_os)) }}

    runs-on: ${{ matrix.os }}

    steps:
      - name: 📥 Check-out repository
        uses: actions/checkout@v4

      - name: 🐍 Setup Python 3.13.5
        uses: actions/setup-python@v5
        with:
          python-version: '3.13.5'
          architecture: 'x64'

      - name: 🚀 Install UV package manager
        run: |
          python -m pip install --upgrade pip
          pip install uv

      - name: 📦 Install dependencies with UV
        run: |
          uv sync --all-groups
          pip install -r requirements.txt

      - name: 🔨 Build executable with Nuitka
        uses: Nuitka/Nuitka-Action@main
        env:
          MPLBACKEND: TkAgg
        with:
          nuitka-version: main
          script-name: cli.py
          mode: standalone
          output-dir: build
          report: true
          include-module: dotenv
          disable-cache: true

      - name: 📤 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-Build
          path: |
            build/**/*
            **/*.xml
            **/*.*
          include-hidden-files: true 